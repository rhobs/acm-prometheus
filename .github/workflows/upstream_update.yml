#create a workflow that creates a pull request based on the branch acm-updates
#the pull request should be created against the branch release-2.11 of the repository prometheus-operator/prometheus-operator

name: ACM Prometheus merger
on:
  workflow_dispatch:
  pull_request:
    paths:
    - '.github/workflows/upstream_updates.yaml'
  push:
    paths:
    - '.github/workflows/upstream_updates.yaml'
    branches:
      - automated-updates-acm-2.12

inputs:
  upstream: prometheus/prometheus
  downstream: stolostron/prometheus
  downstream-branch: release-2.12
  restore-upstream: >-
    CHANGELOG.md
    VERSION
    go.mod
    go.sum
    .golangci.yml
  assets-cmd: |
    # Only compress assets if assets actually changed
    # The git diff relies on gits remote naming. The merge-flow checks out
    # $downstream as origin at the time of writing this code.
    if ! git diff --exit-code origin/master web/ui; then
      make assets-compress
      find web/ui/static -type f -name '*.gz' -exec git add {} \;
      git add web/ui/embed.go
      git diff --cached --exit-code || git commit -s -m "[bot] assets: generate"
    fi
secrets:
  pr-app-id: ${{ secrets.ACM_APP_ID }}
  pr-app-private-key: ${{ secrets.ACM_APP_PRIVATE_KEY }}
  slack-webhook-url: ${{ secrets.ACM_SLACK_WEBHOOK_URL }}

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest upstream tag
        id: upstream
        run: |
          UPSTREAM_VERSION=$(curl --fail --silent "https://api.github.com/repos/${{ inputs.upstream }}/releases/latest" | jq -r '.tag_name')
          if [ "$UPSTREAM_VERSION" == "" ]; then
              echo "upstream-version is invalid" >> "$GITHUB_OUTPUT"
              exit 1
          fi
          echo "release=${UPSTREAM_VERSION}" >> "$GITHUB_OUTPUT"
      - name: Checkout
        uses: actions/checkout@v4
        with:
            ref: ${{ inputs.downstream-branch }}
      - name: Get auth token to create pull request
        if : github.event_name == 'push' && github.ref == 'refs/heads/acm-updates'
        id: pr
        uses: getsentry/action-github-app-token@v3
        with:
          app_id: ${{ secrets.pr-app-id }}
          private_key: ${{ secrets.pr-app-private-key }}
      - name: Create Pull Request
        if: github.event_name != 'pull_request'
        uses: peter-evans/create-pull-request@v6
        id: create-pr
        with:
          title: "[bot] Bump ${{ inputs.downstream }} to ${{ steps.upstream.outputs.release }}"
          body: |
            ## Description
            This is an automated version bump from CI.
            The logs for this run can be found [in the syncbot repo actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).
            If you wish to perform this manually, execute the following commands from ${{ inputs.downstream }} repo:
            ```
            git fetch https://github.com/${{ inputs.upstream }} --tags
            if ! git merge refs/tags/${{ steps.upstream.outputs.release }} --no-edit; then
              git checkout --theirs ${{ inputs.restore-upstream }}
              git checkout --ours ${{ inputs.restore-downstream }}
              git add ${{ inputs.restore-upstream }} ${{ inputs.restore-downstream }}
              git merge --continue
            fi
            go mod tidy
            go mod vendor
            ${{ inputs.assets-cmd }}
            test
            ```
          author: 'github-actions[bot]<github-actions[bot]@users.noreply.github.com>'
          committer: 'github-actions[bot]<github-actions[bot]@users.noreply.github.com>'
          signoff: true
          branch: automated-updates-acm-${{ inputs.downstream-branch }}
          delete-branch: true
          token: ${{ steps.pr.outputs.token }}
          push-to-fork: ${{ inputs.sandbox }}